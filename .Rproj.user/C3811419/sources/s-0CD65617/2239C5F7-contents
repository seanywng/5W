
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(tidyverse)
library(ggmap)
library(sf)
```
```{r}
spd_raw <- read_csv("https://clanfear.github.io/CSSS508/Seattle_Police_Department_911_Incident_Response.csv")
```

```{r}
glimpse(spd_raw)
```
```{r}
ggplot(spd_raw,
       aes(x = Longitude, y = Latitude)) +
  geom_point() +
  coord_fixed() + # evenly spaced x and y
  ggtitle("Seattle Police Incidents",
          subtitle = "March 25, 2016") +
  theme_classic()
  
```

```{r}
qmplot(data = spd_raw,
       x = Longitude, 
       y = Latitude, 
       color = I("#342c5c"),
       alpha = I(0.5))
```

```{r}
# go online and look up stat_density_2d to understand more
qmplot(data = spd_raw, geom = "blank",
       x = Longitude, 
       y = Latitude, 
       darken = 0.5) +
  stat_density2d(
    aes(fill = stat(level)),
    geom = "polygon",
    alpha = .2, colour = NA) +
  scale_fill_gradient2(
    "Incident \nConcentration",
    low = "white",
    mid = "yellow", 
    high = "red") +
  theme(legend.position = "bottom")
```

```{r}
# defining locations
downtown <- spd_raw %>% 
  filter(Latitude > 47.58, Latitude < 47.64,
         Longitude >-122.36, Longitude < -122.31)

assaults <- downtown %>% 
  filter(`Event Clearance Group` %in% 
           c("ASSAULTS", "ROBBERY")) %>% 
  rename(assault_label = `Event Clearance Description`)

library(ggrepel)

qmplot(data = downtown, 
       x = Longitude, 
       y = Latitude, 
       maptype = "toner-lite",
       color = I("firebrick"),
       alpha = I(0.5)) +
  geom_label_repel(data = assaults, # using the assaults df for labels
             aes(label = assault_label),
             fill = "black", 
             colour = "white",
             segment.colour = "black",
             size = 2)
```

```{r, cache=FALSE, message=FALSE, warning=FALSE}

```

```{r}
precinct_shape <- st_read("D:/Downloads/king_district/votdst.shp") %>% 
  select(Precinct = NAME, geometry)

# geometry is created by st_read() when a shapefile is read

```

```{r, cache=FALSE, message=FALSE, warning=FALSE}
precincts_votes_sf <- 
  read_csv("C:/Users/Sean Ng/Documents/R/charles_lanfear5/king_county_elections_2016.txt") %>%
  filter(Race == "US President & Vice President" &
         str_detect(Precinct, "SEA ")) %>% 
  select(Precinct, CounterType, SumOfCount) %>%
  group_by(Precinct) %>%
  filter(CounterType %in% 
           c("Donald J. Trump & Michael R. Pence",
             "Hillary Clinton & Tim Kaine",
             "Registered Voters",
             "Times Counted")) %>%
  mutate(CounterType =
           recode(CounterType, 
                  `Donald J. Trump & Michael R. Pence` = "Trump",
                  `Hillary Clinton & Tim Kaine` = "Clinton",
                  `Registered Voters`= "RegisteredVoters",
                  `Times Counted` = "TotalVotes")) %>%
  pivot_wider(names_from = CounterType, 
              values_from = SumOfCount) %>%
  mutate(P_Dem = Clinton / TotalVotes, 
         P_Rep = Trump / TotalVotes, 
         Turnout = TotalVotes / RegisteredVoters) %>%
  select(Precinct, P_Dem, P_Rep, Turnout) %>% 
  filter(!is.na(P_Dem)) %>%
  left_join(precinct_shape) %>%
  st_as_sf() # Makes sure resulting object is an sf dataframe

glimpse(precincts_votes_sf) 
```

```{r}
ggplot(precincts_votes_sf,
       aes(fill = P_Dem)) +
  geom_sf(size = NA) + # size = NA removes the outlines
  theme_void() +
  theme(legend.position = "bottom") + 
  scale_fill_continuous(trans = "reverse") # reversing the scale
```

You need to obtain the census api key to use tidycensus

```{r}
acs_2015_vars <- load_variables(2015, "acs5")
acs_2015_vars[10:20,] %>% print()
```
```{r}
# "wide" data in tidycensus is actually what we think of as tidy data
# estimates end in E and error margins in M

king_county <- get_acs(geography = "tract", state ="WA",
                       county = "King", geometry = TRUE,
                       variables = c("B02001_001E", "B02009_001E"),
                       output = "wide")

glimpse(king_county)

king_county <- king_county %>% 
  select(-ends_with("M")) %>% 
  rename(`Total Population` = B02001_001E,
         `Any Black` = B02009_001E) %>% 
  mutate(`Any Black` = `Any Black` / `Total Population`)

king_county %>% 
  ggplot(aes(fill = `Any Black`)) +
  geom_sf(size = NA) +
  coord_sf(crs = "+proj=longlat +datum=WGS84", datum = NA) +
  scale_fill_continuous(name = "Any Black\n",
                        low = "#d4d5f9", high = "#00025b") +
  theme_minimal() +
  ggtitle("Proportion Any Black")
```

```{r}
# st_erase -- function made by chuck

st_erase <- function(x, y) {
  st_difference(x, st_make_valid(st_union(st_combine(y))))
}

kc_water   <- tigris::area_water("WA", "King", class = "sf")
kc_nowater <- king_county %>% 
  st_erase(kc_water)

kc_nowater %>% 
  ggplot(aes(fill = `Any Black`)) +
  geom_sf(size = NA) +
  coord_sf(crs = "+proj=longlat +datum=WGS84", datum = NA) +
  scale_fill_continuous(name = "Any Black\n",
                        low = "#d4d5f9", high = "#00025b") +
  theme_minimal() +
  ggtitle("Proportion Any Black")
```

```{r}
pb_state <- 
  get_acs(geography = "tract", state = "IL",
          geometry  = TRUE,
          variables = c("B02001_001E", 
                        "B02009_001E"),
          output = "wide") %>%
  select(-ends_with("M")) %>%
  rename(`Total Population` = B02001_001E,
         `Any Black`        = B02009_001E) %>%
  mutate(`Any Black` = `Any Black` / `Total Population`)

pb_state %>% 
  ggplot(aes(fill = `Any Black`)) +
  geom_sf(size = NA) +
  coord_sf(crs = "+proj=longlat +datum=WGS84", datum = NA) +
  scale_fill_continuous(name = "Any Black\n",
                        low = "#d4d5f9", high = "#00025b") +
  theme_minimal() +
  ggtitle("Proportion Any Black")

ggsave(filename = "proportion_any_black_IL.svg", device = "svg", dpi = 300,
         width = 20, height = 30, units = "cm")
  
  urbans <- tigris::urban_areas(cb = TRUE, class = "sf")
  glimpse(urbans)
  
  urban_il <- urbans %>% filter(str_detect(NAME10, "IL"))
```

```{r}
pb_state %>% 
  ggplot(aes(fill = `Any Black`)) +
  geom_sf(size = NA) +
  geom_sf(data = urban_il, colour = "black", 
          fill = NA, size = 0.1, inherit.aes=FALSE) +
  coord_sf(crs = "+proj=longlat +datum=WGS84", datum = NA) +
  scale_fill_continuous(name = "Any Black\n",
                        low = "#d4d5f9", high = "#00025b") +
  theme_minimal() +
  ggtitle("Proportion Any Black")

ggsave(filename = "proportion_any_black_IL_urban_areas.svg", device = "svg", dpi = 300,
         width = 20, height = 30, units = "cm")
```

