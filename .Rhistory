sex_ratio = round(male / female, digits = 2),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) |>
mutate(percent_of_total =
round(beneficiaries = sum(beneficiaires) * 100, digits = 2)) |>
left_join(act_ben |>
mutate(
implementing_partner =
str_replace_all(
implementing_partner,
"UNICEF - Fondo de las Naciones Unidas para la Infancia",
"UNICEF")) |>
group_by(implementing_partner) |>
summarise(municipalities = n_distinct(pcode2)),
by = "implementing_partner") |>
relocate(beneficiaries, .after = implementing_partner) |>
relocate(percent_of_total, .after = beneficiaries) |>
arrange(desc(beneficiaries)) |>
kable(caption = "Summary of partners' coverage") |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE, font_size = 12)
act_ben %>%
mutate(sex_ben = case_when(
str_detect(disaggregation, "^m") ~ "male",
str_detect(disaggregation, "^f") ~ "female",
TRUE ~ "not_specified")) |>
group_by(implementing_partner) |>
summarise(male = sum(beneficiaries[sex_ben == "male"]),
female = sum(beneficiaries[sex_ben == "female"]),
sex_ratio = round(male / female, digits = 2),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) |>
mutate(percent_of_total =
round(beneficiaries = sum(beneficiaires) * 100, digits = 2)) |>
left_join(act_ben |>
mutate(
implementing_partner =
str_replace_all(
implementing_partner,
"UNICEF - Fondo de las Naciones Unidas para la Infancia",
"UNICEF")) |>
group_by(implementing_partner) |>
summarise(municipalities = n_distinct(pcode2)),
by = "implementing_partner") |>
relocate(beneficiaries, .after = implementing_partner) |>
relocate(percent_of_total, .after = beneficiaries) |>
arrange(desc(beneficiaries)) |>
kable(caption = "Summary of partners' coverage") |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE, font_size = 12)
act_ben %>%
mutate(sex_ben = case_when(
str_detect(disaggregation, "^m") ~ "male",
str_detect(disaggregation, "^f") ~ "female",
TRUE ~ "not_specified")) |>
group_by(implementing_partner) |>
summarise(male = sum(beneficiaries[sex_ben == "male"]),
female = sum(beneficiaries[sex_ben == "female"]),
sex_ratio = round(male / female, digits = 2),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) |>
mutate(percent_of_total =
round(beneficiaries = sum(beneficiaries) * 100, digits = 2)) |>
left_join(act_ben |>
mutate(
implementing_partner =
str_replace_all(
implementing_partner,
"UNICEF - Fondo de las Naciones Unidas para la Infancia",
"UNICEF")) |>
group_by(implementing_partner) |>
summarise(municipalities = n_distinct(pcode2)),
by = "implementing_partner") |>
relocate(beneficiaries, .after = implementing_partner) |>
relocate(percent_of_total, .after = beneficiaries) |>
arrange(desc(beneficiaries)) |>
kable(caption = "Summary of partners' coverage") |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE, font_size = 12)
act_ben %>%
mutate(sex_ben = case_when(
str_detect(disaggregation, "^m") ~ "male",
str_detect(disaggregation, "^f") ~ "female",
TRUE ~ "not_specified")) |>
group_by(implementing_partner) |>
summarise(male = sum(beneficiaries[sex_ben == "male"]),
female = sum(beneficiaries[sex_ben == "female"]),
sex_ratio = round(male / female, digits = 2),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) |>
mutate(percent_of_total =
round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) |>
left_join(act_ben |>
mutate(
implementing_partner =
str_replace_all(
implementing_partner,
"UNICEF - Fondo de las Naciones Unidas para la Infancia",
"UNICEF")) |>
group_by(implementing_partner) |>
summarise(municipalities = n_distinct(pcode2)),
by = "implementing_partner") |>
relocate(beneficiaries, .after = implementing_partner) |>
relocate(percent_of_total, .after = beneficiaries) |>
arrange(desc(beneficiaries)) |>
kable(caption = "Summary of partners' coverage") |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE, font_size = 12)
act_ben %>%
mutate(sex_ben = case_when(
str_detect(disaggregation, "^m") ~ "male",
str_detect(disaggregation, "^f") ~ "female",
TRUE ~ "not_specified")) |>
group_by(implementing_partner) |>
summarise(male = sum(beneficiaries[sex_ben == "male"]),
female = sum(beneficiaries[sex_ben == "female"]),
sex_ratio = round(male / female, digits = 2),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) |>
mutate(percent_of_total =
round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) |>
left_join(act_ben |>
mutate(
implementing_partner =
str_replace_all(
implementing_partner,
"UNICEF - Fondo de las Naciones Unidas para la Infancia",
"UNICEF")) |>
group_by(implementing_partner) |>
summarise(municipalities = n_distinct(pcode2)),
by = "implementing_partner") |>
mutate_at(c("male", "female"), ~ round(.)) |>
relocate(beneficiaries, .after = implementing_partner) |>
relocate(percent_of_total, .after = beneficiaries) |>
arrange(desc(beneficiaries)) |>
kable(caption = "Summary of partners' coverage") |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE, font_size = 12)
act_ben %>%
mutate(sex_ben = case_when(
str_detect(disaggregation, "^m") ~ "male",
str_detect(disaggregation, "^f") ~ "female",
TRUE ~ "not_specified")) |>
group_by(implementing_partner) |>
summarise(male = sum(beneficiaries[sex_ben == "male"]),
female = sum(beneficiaries[sex_ben == "female"]),
sex_ratio = round(male / female, digits = 2),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) |>
mutate(percent_of_total =
round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) |>
left_join(act_ben |>
mutate(
implementing_partner =
str_replace_all(
implementing_partner,
"UNICEF - Fondo de las Naciones Unidas para la Infancia",
"UNICEF")) |>
group_by(implementing_partner) |>
summarise(municipalities = n_distinct(pcode2)),
by = "implementing_partner") |>
mutate_at(c("male", "female"), ~ format(round(.), big.mark = ",")) |>
relocate(beneficiaries, .after = implementing_partner) |>
relocate(percent_of_total, .after = beneficiaries) |>
arrange(desc(beneficiaries)) |>
kable(caption = "Summary of partners' coverage") |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE, font_size = 12)
act_ben %>%
mutate(sex_ben = case_when(
str_detect(disaggregation, "^m") ~ "male",
str_detect(disaggregation, "^f") ~ "female",
TRUE ~ "not_specified")) |>
group_by(implementing_partner) |>
summarise(male = sum(beneficiaries[sex_ben == "male"]),
female = sum(beneficiaries[sex_ben == "female"]),
sex_ratio = round(male / female, digits = 2),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) |>
mutate(percent_of_total =
round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) |>
left_join(act_ben |>
mutate(
implementing_partner =
str_replace_all(
implementing_partner,
"UNICEF - Fondo de las Naciones Unidas para la Infancia",
"UNICEF")) |>
group_by(implementing_partner) |>
summarise(municipalities = n_distinct(pcode2)),
by = "implementing_partner") |>
mutate_at(c("male", "female", "beneficiaries"),
~ format(round(.), big.mark = ",")) |>
relocate(beneficiaries, .after = implementing_partner) |>
relocate(percent_of_total, .after = beneficiaries) |>
arrange(desc(beneficiaries)) |>
kable(caption = "Summary of partners' coverage") |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE, font_size = 12)
act_ben %>%
mutate(sex_ben = case_when(
str_detect(disaggregation, "^m") ~ "male",
str_detect(disaggregation, "^f") ~ "female",
TRUE ~ "not_specified")) |>
group_by(implementing_partner) |>
summarise(male = sum(beneficiaries[sex_ben == "male"]),
female = sum(beneficiaries[sex_ben == "female"]),
sex_ratio = round(male / female, digits = 2),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) |>
mutate(`%_total` =
round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) |>
left_join(act_ben |>
mutate(
implementing_partner =
str_replace_all(
implementing_partner,
"UNICEF - Fondo de las Naciones Unidas para la Infancia",
"UNICEF")) |>
group_by(implementing_partner) |>
summarise(municipalities = n_distinct(pcode2)),
by = "implementing_partner") |>
mutate_at(c("male", "female", "beneficiaries"),
~ format(round(.), big.mark = ",")) |>
relocate(beneficiaries, .after = implementing_partner) |>
relocate(`%_total`, .after = beneficiaries) |>
arrange(desc(beneficiaries)) |>
kable(caption = "Summary of partners' coverage") |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE, font_size = 12)
# reading in shapefile
# quiet = TRUE is very important here
pcode2_shape <- st_read("./vnz_adm2_shapefiles/ven_admbnda_adm2_20180502.shp", quiet = TRUE) %>%
rename(pcode1 = ADM1_PCODE,
pcode2 = ADM2_PCODE)
# plot for beneficiaries reached by pcode2
mun_ben_plot <- all_mun %>%
right_join(pcode2_shape) %>%
st_as_sf() %>%
ggplot(aes(fill = beneficiaries)) +
geom_sf(size = 0.01) +
theme_void() +
ggtitle("Number of beneficiaries reached by municipality") +
scale_fill_gradient(trans = trans_reverser("log"), breaks = c(0, 100, 1000, 10000, 80482),
labels = comma, na.value = "gray90") +
theme(legend.key.size = unit(0.3, "cm"),
legend.position = c(0.9, 0.1),
legend.title = element_blank(),
plot.title = element_text(size = 12))
# plot for beneficiaries reached by pcode2
mun_ben_plot <- all_mun %>%
right_join(pcode2_shape, by = "pcode2") %>%
st_as_sf() %>%
ggplot(aes(fill = beneficiaries)) +
geom_sf(size = 0.01) +
theme_void() +
ggtitle("Number of beneficiaries reached by municipality") +
scale_fill_gradient(trans = trans_reverser("log"), breaks = c(0, 100, 1000, 10000, 80482),
labels = comma, na.value = "gray90") +
theme(legend.key.size = unit(0.3, "cm"),
legend.position = c(0.9, 0.1),
legend.title = element_blank(),
plot.title = element_text(size = 12))
# plot for beneficiaries reached by pcode2
all_mun %>%
right_join(pcode2_shape, by = "pcode2") %>%
st_as_sf() %>%
ggplot(aes(fill = beneficiaries)) +
geom_sf(size = 0.01) +
theme_void() +
ggtitle("Number of beneficiaries reached by municipality") +
scale_fill_gradient(trans = trans_reverser("log"), breaks = c(0, 100, 1000, 10000, 80482),
labels = comma, na.value = "gray90") +
theme(legend.key.size = unit(0.3, "cm"),
legend.position = c(0.9, 0.1),
legend.title = element_blank(),
plot.title = element_text(size = 12)) +
# map of percent of enrolled chidren covered by pcode2
all_mun %>%
right_join(pcode2_shape) %>%
st_as_sf() %>%
ggplot(aes(fill = coverage_percent))+
geom_sf(size = 0.01) +
theme_void() +
ggtitle("Percent of enrolled children (3-17) reached by municipality") +
scale_fill_gradient(labels = comma, trans = "reverse", na.value = "gray90")+
theme(legend.key.size = unit(0.3, "cm"),
legend.position = c(0.9, 0.1),
legend.title = element_blank(),
plot.title = element_text(size = 12)) +
plot_layout(ncol = 2)
all_mun
all_mun
# it shows 335. I bet it's Vargas again
all_mun %>%
mutate(Cluster_present = ifelse(is.na(beneficiaries), FALSE, TRUE)) |>
rename(num_activities = act_types) |>
select(Cluster_present, state, municipality,
beneficiaries, beneficiaries_3_17,
coverage_percent,
num_activities, population = population2019,
percent_urban, percent_poor) |>
mutate_at(c("percent_urban", "percent_poor"), ~ round(. * 100, digits = 2)) |>
datatable(filter = "top", options = list(pageLength = 10, scrollX = TRUE)) |>
DT::formatStyle(columns = colnames(.), fontSize = "12pt")
all_mun
# it shows 335. I bet it's Vargas again
all_mun %>%
mutate(Cluster_present = ifelse(is.na(beneficiaries), FALSE, TRUE)) |>
rename(num_activities = activity_types) |>
select(Cluster_present, state, municipality,
beneficiaries, beneficiaries_3_17,
coverage_percent,
num_activities, population = population2019,
percent_urban, percent_poor) |>
mutate_at(c("percent_urban", "percent_poor"), ~ round(. * 100, digits = 2)) |>
datatable(filter = "top", options = list(pageLength = 10, scrollX = TRUE)) |>
DT::formatStyle(columns = colnames(.), fontSize = "12pt")
# it shows 335. I bet it's Vargas again
all_mun %>%
mutate(Cluster_present = ifelse(is.na(beneficiaries), FALSE, TRUE)) |>
rename(num_activities = activity_types) |>
select(Cluster_present, state, municipality,
beneficiaries, beneficiaries_3_17,
coverage_percent,
num_activities, population = population2019,
percent_urban, percent_poor) |>
mutate_at(c("percent_urban", "percent_poor"),
~ round(. * 100, digits = 2)) |>
datatable(filter = "top", options = list(pageLength = 10, scrollX = TRUE)) |>
DT::formatStyle(fontSize = "12pt")
# it shows 335. I bet it's Vargas again
all_mun %>%
mutate(Cluster_present = ifelse(is.na(beneficiaries), FALSE, TRUE)) |>
rename(num_activities = activity_types) |>
select(Cluster_present, state, municipality,
beneficiaries, beneficiaries_3_17,
coverage_percent,
num_activities, population = population2019,
percent_urban, percent_poor) |>
mutate_at(c("percent_urban", "percent_poor"),
~ round(. * 100, digits = 2)) |>
datatable(filter = "top", options = list(pageLength = 10, scrollX = TRUE))
# it shows 335. I bet it's Vargas again
all_mun %>%
mutate(Cluster_present = ifelse(is.na(beneficiaries), FALSE, TRUE)) |>
rename(num_activities = activity_types) |>
select(Cluster_present, state, municipality,
beneficiaries, beneficiaries_3_17,
coverage_percent,
num_activities, population = population2019,
percent_urban, percent_poor) |>
mutate_at(c("percent_urban", "percent_poor"),
~ round(. * 100, digits = 2)) |>
mutate_at(c("beneficiaries", "beneficiaries_3_17",
"population"),
~ format(., big.mark = ","))
# it shows 335. I bet it's Vargas again
all_mun %>%
mutate(Cluster_present = ifelse(is.na(beneficiaries), FALSE, TRUE)) |>
rename(num_activities = activity_types) |>
select(Cluster_present, state, municipality,
beneficiaries, beneficiaries_3_17,
coverage_percent,
num_activities, population = population2019,
percent_urban, percent_poor) |>
mutate_at(c("percent_urban", "percent_poor"),
~ round(. * 100, digits = 2)) |>
mutate_at(c("beneficiaries", "beneficiaries_3_17",
"population"),
~ format(., big.mark = ",")) |>
datatable(filter = "top", options = list(pageLength = 10, scrollX = TRUE))
all_mun
all_mun <-  cen_ref |>
mutate(population_urban =
x_2019_poblacion_parroquial_total *
poblacion_urbana_percent / 100) |>
select(pcode2,
population2019 = x_2019_poblacion_parroquial_total,
population_poor = ham_2019_xx_poblacion_pobre_por_parroquia,
population_urban) |>
group_by(pcode2) |>
summarise(
population2019 = sum(population2019),
population_poor = sum(population_poor),
population_urban = sum(population_urban)) |>
right_join(cen_ref |>  # for bringing matricula2017 into all_mun
pivot_longer(cols = c("matricula_2017_educacion_inicial",
"matricula_2017_educacion_primaria",
"matricula_2017_educacion_media"),
names_to = "age_ben", values_to = "matricula2017",
values_drop_na = TRUE) %>%
select(pcode2, age_ben, matricula2017) %>%
group_by(pcode2) %>%
summarise(matricula2017 = sum(matricula2017)),
by = "pcode2") |>
left_join(u_ben |>
# Identifying which beneficiaries are school-aged children
mutate(is_matric = case_when( # for beneficiaries aged 3-17
str_detect(disaggregation,"3_6$") ~ "matric",
str_detect(disaggregation,"7_12$") ~ "matric",
str_detect(disaggregation,"12_17$") ~ "matric",
TRUE ~ "non_matric")) |>
mutate(beneficiaries_3_17 = ifelse(is_matric == "matric", beneficiaries, 0)) |>
group_by(state, municipality, pcode2) |>
summarise(beneficiaries = round(sum(beneficiaries)),
beneficiaries_3_17 = round(sum(beneficiaries_3_17)),
.groups = "drop"),
by = "pcode2") |>
left_join(act_ben %>% # bringing activity counts into u_ben
group_by(pcode2) |>
summarise(activity_types = n_distinct(activity_short)),
by = "pcode2") |>
mutate(coverage_percent = round(beneficiaries_3_17 / matricula2017 * 100),
percent_urban = population_urban / population2019,
percent_poor = population_poor / population2019) %>%
mutate(state = fct_reorder(state, beneficiaries, .desc = TRUE)) %>%
mutate_at(c("state", "municipality"), ~ str_to_title(.)) |>
arrange(desc(beneficiaries))
# it shows 335. I bet it's Vargas again
all_mun %>%
mutate(Cluster_present = ifelse(is.na(beneficiaries), FALSE, TRUE)) |>
rename(num_activities = activity_types) |>
select(Cluster_present, state, municipality,
beneficiaries, beneficiaries_3_17,
coverage_percent,
num_activities, population = population2019,
percent_urban, percent_poor) |>
mutate_at(c("percent_urban", "percent_poor"),
~ round(. * 100, digits = 2)) |>
mutate_at(c("beneficiaries", "beneficiaries_3_17",
"population"),
~ format(., big.mark = ",")) |>
datatable(filter = "top", options = list(pageLength = 10, scrollX = TRUE))
# creating the all_mun df
# all_mun is one obs per pcode2
all_mun <-  cen_ref |>
mutate(population_urban =
x_2019_poblacion_parroquial_total *
poblacion_urbana_percent / 100) |>
select(pcode2,
population2019 = x_2019_poblacion_parroquial_total,
population_poor = ham_2019_xx_poblacion_pobre_por_parroquia,
population_urban) |>
group_by(pcode2) |>
summarise(
population2019 = sum(population2019),
population_poor = sum(population_poor),
population_urban = sum(population_urban)) |>
right_join(cen_ref |>  # for bringing matricula2017 into all_mun
pivot_longer(cols = c("matricula_2017_educacion_inicial",
"matricula_2017_educacion_primaria",
"matricula_2017_educacion_media"),
names_to = "age_ben", values_to = "matricula2017",
values_drop_na = TRUE) %>%
select(pcode2, age_ben, matricula2017) %>%
group_by(pcode2) %>%
summarise(matricula2017 = sum(matricula2017)),
by = "pcode2") |>
left_join(u_ben |>
# Identifying which beneficiaries are school-aged children
mutate(is_matric = case_when( # for beneficiaries aged 3-17
str_detect(disaggregation,"3_6$") ~ "matric",
str_detect(disaggregation,"7_12$") ~ "matric",
str_detect(disaggregation,"12_17$") ~ "matric",
TRUE ~ "non_matric")) |>
mutate(beneficiaries_3_17 = ifelse(is_matric == "matric", beneficiaries, 0)) |>
group_by(state, municipality, pcode2) |>
summarise(beneficiaries = round(sum(beneficiaries)),
beneficiaries_3_17 = round(sum(beneficiaries_3_17)),
.groups = "drop"),
by = "pcode2") |>
left_join(act_ben %>% # bringing activity counts into u_ben
group_by(pcode2) |>
summarise(activity_types = n_distinct(activity_short)),
by = "pcode2") |>
mutate(coverage_percent = beneficiaries_3_17 / matricula2017,
percent_urban = population_urban / population2019,
percent_poor = population_poor / population2019) %>%
mutate(state = fct_reorder(state, beneficiaries, .desc = TRUE)) %>%
mutate_at(c("state", "municipality"), ~ str_to_title(.)) |>
arrange(desc(beneficiaries))
# try to make a table of the most oversubscribed municipalities
top_cov <- all_mun %>%
mutate(coverage_percent = round(coverage_percent * 100, digits = 2))
# try to make a table of the most oversubscribed municipalities
top_cov <- all_mun %>%
mutate(coverage_percent = round(coverage_percent * 100, digits = 2)) |>
arrange(desc(coverage_percent)) %>%
select(state, municipality, coverage_percent) %>% slice(1:10)
# plot for beneficiaries reached by pcode2
all_mun %>%
right_join(pcode2_shape, by = "pcode2") %>%
st_as_sf() %>%
ggplot(aes(fill = beneficiaries)) +
geom_sf(size = 0.01) +
theme_void() +
ggtitle("Number of beneficiaries reached by municipality") +
scale_fill_gradient(trans = trans_reverser("log"), breaks = c(0, 100, 1000, 10000, 80482),
labels = comma, na.value = "gray90") +
theme(legend.key.size = unit(0.3, "cm"),
legend.position = c(0.9, 0.1),
legend.title = element_blank(),
plot.title = element_text(size = 12)) +
# map of percent of enrolled chidren covered by pcode2
all_mun %>%
mutate(coverage_percent = round(coverage_percent * 100)) |>
right_join(pcode2_shape) %>%
st_as_sf() %>%
ggplot(aes(fill = coverage_percent))+
geom_sf(size = 0.01) +
theme_void() +
ggtitle("Percent of enrolled children (3-17) reached by municipality") +
scale_fill_gradient(labels = comma, trans = "reverse", na.value = "gray90")+
theme(legend.key.size = unit(0.3, "cm"),
legend.position = c(0.9, 0.1),
legend.title = element_blank(),
plot.title = element_text(size = 12)) +
plot_layout(ncol = 2)
all_mun
